   1              		.file	"hello.cc"
   2              	 # GNU C++17 (Rev1, Built by MSYS2 project) version 12.2.0 (x86_64-w64-mingw32)
   3              	 #	compiled by GNU C version 12.2.0, GMP version 6.2.1, MPFR version 4.1.0-p13, MPC version 1.2.1, 
   4              	
   5              	 # GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   6              	 # options passed: -mtune=generic -march=x86-64 -g -O2
   7              		.text
   8              	.Ltext0:
   9              		.file 0 "E:/workspace_asm/hello-world" "hello.cc"
  10              		.section	.text$_Z6printfPKcz,"x"
  11              		.linkonce discard
  12              		.p2align 4
  13              		.globl	_Z6printfPKcz
  15              		.seh_proc	_Z6printfPKcz
  16              	_Z6printfPKcz:
  17              	.LVL0:
  18              	.LFB8:
  19              		.file 1 "C:/msys64/mingw64/include/stdio.h"
   1:C:/msys64/mingw64/include\stdio.h **** /**
   2:C:/msys64/mingw64/include\stdio.h ****  * This file has no copyright assigned and is placed in the Public Domain.
   3:C:/msys64/mingw64/include\stdio.h ****  * This file is part of the mingw-w64 runtime package.
   4:C:/msys64/mingw64/include\stdio.h ****  * No warranty is given; refer to the file DISCLAIMER.PD within this package.
   5:C:/msys64/mingw64/include\stdio.h ****  */
   6:C:/msys64/mingw64/include\stdio.h **** #ifndef _INC_STDIO
   7:C:/msys64/mingw64/include\stdio.h **** #define _INC_STDIO
   8:C:/msys64/mingw64/include\stdio.h **** 
   9:C:/msys64/mingw64/include\stdio.h **** #include <corecrt_stdio_config.h>
  10:C:/msys64/mingw64/include\stdio.h **** 
  11:C:/msys64/mingw64/include\stdio.h **** #pragma pack(push,_CRT_PACKING)
  12:C:/msys64/mingw64/include\stdio.h **** 
  13:C:/msys64/mingw64/include\stdio.h **** #pragma push_macro("snprintf")
  14:C:/msys64/mingw64/include\stdio.h **** #undef snprintf
  15:C:/msys64/mingw64/include\stdio.h **** #pragma push_macro("vsnprintf")
  16:C:/msys64/mingw64/include\stdio.h **** #undef vsnprintf
  17:C:/msys64/mingw64/include\stdio.h **** #pragma push_macro("snwprintf")
  18:C:/msys64/mingw64/include\stdio.h **** #undef snwprintf
  19:C:/msys64/mingw64/include\stdio.h **** #pragma push_macro("vsnwprintf")
  20:C:/msys64/mingw64/include\stdio.h **** #undef vsnwprintf
  21:C:/msys64/mingw64/include\stdio.h **** 
  22:C:/msys64/mingw64/include\stdio.h **** #ifdef __cplusplus
  23:C:/msys64/mingw64/include\stdio.h **** extern "C" {
  24:C:/msys64/mingw64/include\stdio.h **** #endif
  25:C:/msys64/mingw64/include\stdio.h **** 
  26:C:/msys64/mingw64/include\stdio.h **** #define BUFSIZ 512
  27:C:/msys64/mingw64/include\stdio.h **** #define _NFILE _NSTREAM_
  28:C:/msys64/mingw64/include\stdio.h **** #define _NSTREAM_ 512
  29:C:/msys64/mingw64/include\stdio.h **** #define _IOB_ENTRIES 20
  30:C:/msys64/mingw64/include\stdio.h **** #define EOF (-1)
  31:C:/msys64/mingw64/include\stdio.h **** 
  32:C:/msys64/mingw64/include\stdio.h **** #ifndef _FILE_DEFINED
  33:C:/msys64/mingw64/include\stdio.h ****   struct _iobuf {
  34:C:/msys64/mingw64/include\stdio.h **** #ifdef _UCRT
  35:C:/msys64/mingw64/include\stdio.h ****     void *_Placeholder;
  36:C:/msys64/mingw64/include\stdio.h **** #else
  37:C:/msys64/mingw64/include\stdio.h ****     char *_ptr;
  38:C:/msys64/mingw64/include\stdio.h ****     int _cnt;
  39:C:/msys64/mingw64/include\stdio.h ****     char *_base;
  40:C:/msys64/mingw64/include\stdio.h ****     int _flag;
  41:C:/msys64/mingw64/include\stdio.h ****     int _file;
  42:C:/msys64/mingw64/include\stdio.h ****     int _charbuf;
  43:C:/msys64/mingw64/include\stdio.h ****     int _bufsiz;
  44:C:/msys64/mingw64/include\stdio.h ****     char *_tmpfname;
  45:C:/msys64/mingw64/include\stdio.h **** #endif
  46:C:/msys64/mingw64/include\stdio.h ****   };
  47:C:/msys64/mingw64/include\stdio.h ****   typedef struct _iobuf FILE;
  48:C:/msys64/mingw64/include\stdio.h **** #define _FILE_DEFINED
  49:C:/msys64/mingw64/include\stdio.h **** #endif
  50:C:/msys64/mingw64/include\stdio.h **** 
  51:C:/msys64/mingw64/include\stdio.h **** #ifdef _POSIX_
  52:C:/msys64/mingw64/include\stdio.h **** #define _P_tmpdir "/"
  53:C:/msys64/mingw64/include\stdio.h **** #define _wP_tmpdir L"/"
  54:C:/msys64/mingw64/include\stdio.h **** #else
  55:C:/msys64/mingw64/include\stdio.h **** #define _P_tmpdir "\\"
  56:C:/msys64/mingw64/include\stdio.h **** #define _wP_tmpdir L"\\"
  57:C:/msys64/mingw64/include\stdio.h **** #endif
  58:C:/msys64/mingw64/include\stdio.h **** 
  59:C:/msys64/mingw64/include\stdio.h **** #define L_tmpnam (sizeof(_P_tmpdir) + 12)
  60:C:/msys64/mingw64/include\stdio.h **** 
  61:C:/msys64/mingw64/include\stdio.h **** #ifdef _POSIX_
  62:C:/msys64/mingw64/include\stdio.h **** #define L_ctermid 9
  63:C:/msys64/mingw64/include\stdio.h **** #define L_cuserid 32
  64:C:/msys64/mingw64/include\stdio.h **** #endif
  65:C:/msys64/mingw64/include\stdio.h **** 
  66:C:/msys64/mingw64/include\stdio.h **** #define SEEK_CUR 1
  67:C:/msys64/mingw64/include\stdio.h **** #define SEEK_END 2
  68:C:/msys64/mingw64/include\stdio.h **** #define SEEK_SET 0
  69:C:/msys64/mingw64/include\stdio.h **** 
  70:C:/msys64/mingw64/include\stdio.h **** #define	STDIN_FILENO	0
  71:C:/msys64/mingw64/include\stdio.h **** #define	STDOUT_FILENO	1
  72:C:/msys64/mingw64/include\stdio.h **** #define	STDERR_FILENO	2
  73:C:/msys64/mingw64/include\stdio.h **** 
  74:C:/msys64/mingw64/include\stdio.h **** #define FILENAME_MAX 260
  75:C:/msys64/mingw64/include\stdio.h **** #define FOPEN_MAX 20
  76:C:/msys64/mingw64/include\stdio.h **** #define _SYS_OPEN 20
  77:C:/msys64/mingw64/include\stdio.h **** #define TMP_MAX 32767
  78:C:/msys64/mingw64/include\stdio.h **** 
  79:C:/msys64/mingw64/include\stdio.h **** #ifndef NULL
  80:C:/msys64/mingw64/include\stdio.h **** #ifdef __cplusplus
  81:C:/msys64/mingw64/include\stdio.h **** #ifndef _WIN64
  82:C:/msys64/mingw64/include\stdio.h **** #define NULL 0
  83:C:/msys64/mingw64/include\stdio.h **** #else
  84:C:/msys64/mingw64/include\stdio.h **** #define NULL 0LL
  85:C:/msys64/mingw64/include\stdio.h **** #endif  /* W64 */
  86:C:/msys64/mingw64/include\stdio.h **** #else
  87:C:/msys64/mingw64/include\stdio.h **** #define NULL ((void *)0)
  88:C:/msys64/mingw64/include\stdio.h **** #endif
  89:C:/msys64/mingw64/include\stdio.h **** #endif
  90:C:/msys64/mingw64/include\stdio.h **** 
  91:C:/msys64/mingw64/include\stdio.h **** #include <_mingw_off_t.h>
  92:C:/msys64/mingw64/include\stdio.h **** 
  93:C:/msys64/mingw64/include\stdio.h **** _CRTIMP FILE *__cdecl __acrt_iob_func(unsigned index);
  94:C:/msys64/mingw64/include\stdio.h **** #ifndef _STDIO_DEFINED
  95:C:/msys64/mingw64/include\stdio.h **** #ifdef _WIN64
  96:C:/msys64/mingw64/include\stdio.h ****   _CRTIMP FILE *__cdecl __iob_func(void);
  97:C:/msys64/mingw64/include\stdio.h **** #define _iob  __iob_func()
  98:C:/msys64/mingw64/include\stdio.h **** #else
  99:C:/msys64/mingw64/include\stdio.h **** #ifdef _MSVCRT_
 100:C:/msys64/mingw64/include\stdio.h **** extern FILE _iob[];	/* A pointer to an array of FILE */
 101:C:/msys64/mingw64/include\stdio.h **** #define __iob_func()	(_iob)
 102:C:/msys64/mingw64/include\stdio.h **** #else
 103:C:/msys64/mingw64/include\stdio.h **** extern FILE (* __MINGW_IMP_SYMBOL(_iob))[];	/* A pointer to an array of FILE */
 104:C:/msys64/mingw64/include\stdio.h **** #define __iob_func()	(* __MINGW_IMP_SYMBOL(_iob))
 105:C:/msys64/mingw64/include\stdio.h **** #define _iob __iob_func()
 106:C:/msys64/mingw64/include\stdio.h **** #endif
 107:C:/msys64/mingw64/include\stdio.h **** #endif
 108:C:/msys64/mingw64/include\stdio.h **** #endif
 109:C:/msys64/mingw64/include\stdio.h **** 
 110:C:/msys64/mingw64/include\stdio.h **** #ifndef _FPOS_T_DEFINED
 111:C:/msys64/mingw64/include\stdio.h **** #define _FPOS_T_DEFINED
 112:C:/msys64/mingw64/include\stdio.h **** #undef _FPOSOFF
 113:C:/msys64/mingw64/include\stdio.h **** 
 114:C:/msys64/mingw64/include\stdio.h **** #if (!defined(NO_OLDNAMES) || defined(__GNUC__))
 115:C:/msys64/mingw64/include\stdio.h ****   __MINGW_EXTENSION typedef __int64 fpos_t;
 116:C:/msys64/mingw64/include\stdio.h **** #define _FPOSOFF(fp) ((long)(fp))
 117:C:/msys64/mingw64/include\stdio.h **** #else
 118:C:/msys64/mingw64/include\stdio.h ****   __MINGW_EXTENSION typedef long long fpos_t;
 119:C:/msys64/mingw64/include\stdio.h **** #define _FPOSOFF(fp) ((long)(fp))
 120:C:/msys64/mingw64/include\stdio.h **** #endif
 121:C:/msys64/mingw64/include\stdio.h **** 
 122:C:/msys64/mingw64/include\stdio.h **** #endif
 123:C:/msys64/mingw64/include\stdio.h **** 
 124:C:/msys64/mingw64/include\stdio.h **** #ifndef _STDSTREAM_DEFINED
 125:C:/msys64/mingw64/include\stdio.h **** #define _STDSTREAM_DEFINED
 126:C:/msys64/mingw64/include\stdio.h **** 
 127:C:/msys64/mingw64/include\stdio.h **** #define stdin (__acrt_iob_func(0))
 128:C:/msys64/mingw64/include\stdio.h **** #define stdout (__acrt_iob_func(1))
 129:C:/msys64/mingw64/include\stdio.h **** #define stderr (__acrt_iob_func(2))
 130:C:/msys64/mingw64/include\stdio.h **** #endif
 131:C:/msys64/mingw64/include\stdio.h **** 
 132:C:/msys64/mingw64/include\stdio.h **** #define _IOFBF 0x0000
 133:C:/msys64/mingw64/include\stdio.h **** #define _IOLBF 0x0040
 134:C:/msys64/mingw64/include\stdio.h **** #define _IONBF 0x0004
 135:C:/msys64/mingw64/include\stdio.h **** 
 136:C:/msys64/mingw64/include\stdio.h **** #ifndef _UCRT
 137:C:/msys64/mingw64/include\stdio.h **** #define _IOREAD 0x0001
 138:C:/msys64/mingw64/include\stdio.h **** #define _IOWRT 0x0002
 139:C:/msys64/mingw64/include\stdio.h **** #define _IOMYBUF 0x0008
 140:C:/msys64/mingw64/include\stdio.h **** #define _IOEOF 0x0010
 141:C:/msys64/mingw64/include\stdio.h **** #define _IOERR 0x0020
 142:C:/msys64/mingw64/include\stdio.h **** #define _IOSTRG 0x0040
 143:C:/msys64/mingw64/include\stdio.h **** #define _IORW 0x0080
 144:C:/msys64/mingw64/include\stdio.h **** #ifdef _POSIX_
 145:C:/msys64/mingw64/include\stdio.h **** #define _IOAPPEND 0x0200
 146:C:/msys64/mingw64/include\stdio.h **** #endif
 147:C:/msys64/mingw64/include\stdio.h **** #endif
 148:C:/msys64/mingw64/include\stdio.h **** 
 149:C:/msys64/mingw64/include\stdio.h **** #define _TWO_DIGIT_EXPONENT 0x1
 150:C:/msys64/mingw64/include\stdio.h **** 
 151:C:/msys64/mingw64/include\stdio.h **** #if __MINGW_FORTIFY_LEVEL > 0
 152:C:/msys64/mingw64/include\stdio.h **** __mingw_bos_declare;
 153:C:/msys64/mingw64/include\stdio.h **** #endif
 154:C:/msys64/mingw64/include\stdio.h **** 
 155:C:/msys64/mingw64/include\stdio.h **** #ifndef _STDIO_DEFINED
 156:C:/msys64/mingw64/include\stdio.h **** extern
 157:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 158:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...);
 159:C:/msys64/mingw64/include\stdio.h **** extern
 160:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
 161:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_vsscanf (const char * __restrict__ _Str,const char * __restrict__ Format,va_l
 162:C:/msys64/mingw64/include\stdio.h **** extern
 163:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
 164:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_scanf(const char * __restrict__ _Format,...);
 165:C:/msys64/mingw64/include\stdio.h **** extern
 166:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
 167:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_vscanf(const char * __restrict__ Format, va_list argp);
 168:C:/msys64/mingw64/include\stdio.h **** extern
 169:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 170:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
 171:C:/msys64/mingw64/include\stdio.h **** extern
 172:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
 173:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_vfscanf (FILE * __restrict__ fp, const char * __restrict__ Format,va_list arg
 174:C:/msys64/mingw64/include\stdio.h **** 
 175:C:/msys64/mingw64/include\stdio.h **** extern
 176:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
 177:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_vsnprintf(char * __restrict__ _DstBuf,size_t _MaxCount,const char * __restric
 178:C:/msys64/mingw64/include\stdio.h ****                                va_list _ArgList);
 179:C:/msys64/mingw64/include\stdio.h **** extern
 180:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
 181:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_snprintf(char * __restrict__ s, size_t n, const char * __restrict__  format, 
 182:C:/msys64/mingw64/include\stdio.h **** extern
 183:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
 184:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_printf(const char * __restrict__ , ... ) __MINGW_NOTHROW;
 185:C:/msys64/mingw64/include\stdio.h **** extern
 186:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
 187:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_vprintf (const char * __restrict__ , va_list) __MINGW_NOTHROW;
 188:C:/msys64/mingw64/include\stdio.h **** extern
 189:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 190:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_fprintf (FILE * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHR
 191:C:/msys64/mingw64/include\stdio.h **** extern
 192:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
 193:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_vfprintf (FILE * __restrict__ , const char * __restrict__ , va_list) __MINGW_
 194:C:/msys64/mingw64/include\stdio.h **** extern
 195:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 196:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_sprintf (char * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHR
 197:C:/msys64/mingw64/include\stdio.h **** extern
 198:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
 199:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_vsprintf (char * __restrict__ , const char * __restrict__ , va_list) __MINGW_
 200:C:/msys64/mingw64/include\stdio.h **** extern
 201:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 2, 3))) __attribute__((nonnull (1,2)))
 202:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_asprintf(char ** __restrict__ , const char * __restrict__ , ...) __MINGW_NOTH
 203:C:/msys64/mingw64/include\stdio.h **** extern
 204:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (gnu_printf, 2, 0))) __attribute__((nonnull (1,2)))
 205:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __mingw_vasprintf(char ** __restrict__ , const char * __restrict__ , va_list) __MINGW
 206:C:/msys64/mingw64/include\stdio.h **** 
 207:C:/msys64/mingw64/include\stdio.h **** extern
 208:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 209:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __ms_sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...);
 210:C:/msys64/mingw64/include\stdio.h **** extern
 211:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (ms_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
 212:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __ms_scanf(const char * __restrict__ _Format,...);
 213:C:/msys64/mingw64/include\stdio.h **** extern
 214:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 215:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __ms_fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
 216:C:/msys64/mingw64/include\stdio.h **** 
 217:C:/msys64/mingw64/include\stdio.h **** extern
 218:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (ms_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
 219:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __ms_printf(const char * __restrict__ , ... ) __MINGW_NOTHROW;
 220:C:/msys64/mingw64/include\stdio.h **** extern
 221:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (ms_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
 222:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __ms_vprintf (const char * __restrict__ , va_list) __MINGW_NOTHROW;
 223:C:/msys64/mingw64/include\stdio.h **** extern
 224:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 225:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __ms_fprintf (FILE * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
 226:C:/msys64/mingw64/include\stdio.h **** extern
 227:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
 228:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __ms_vfprintf (FILE * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOT
 229:C:/msys64/mingw64/include\stdio.h **** extern
 230:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 231:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __ms_sprintf (char * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
 232:C:/msys64/mingw64/include\stdio.h **** extern
 233:C:/msys64/mingw64/include\stdio.h ****   __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
 234:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __ms_vsprintf (char * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOT
 235:C:/msys64/mingw64/include\stdio.h **** 
 236:C:/msys64/mingw64/include\stdio.h **** #ifdef _UCRT
 237:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __stdio_common_vsprintf(unsigned __int64 options, char *str, size_t len, const char *
 238:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __stdio_common_vfprintf(unsigned __int64 options, FILE *file, const char *format, _lo
 239:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __stdio_common_vsscanf(unsigned __int64 options, const char *input, size_t length, co
 240:C:/msys64/mingw64/include\stdio.h ****   int __cdecl __stdio_common_vfscanf(unsigned __int64 options, FILE *file, const char *format, _loc
 241:C:/msys64/mingw64/include\stdio.h **** #endif
 242:C:/msys64/mingw64/include\stdio.h **** 
 243:C:/msys64/mingw64/include\stdio.h **** #undef __MINGW_PRINTF_FORMAT
 244:C:/msys64/mingw64/include\stdio.h **** #undef __MINGW_SCANF_FORMAT
 245:C:/msys64/mingw64/include\stdio.h **** 
 246:C:/msys64/mingw64/include\stdio.h **** #if defined(__clang__)
 247:C:/msys64/mingw64/include\stdio.h **** #define __MINGW_PRINTF_FORMAT printf
 248:C:/msys64/mingw64/include\stdio.h **** #define __MINGW_SCANF_FORMAT  scanf
 249:C:/msys64/mingw64/include\stdio.h **** #elif defined(_UCRT) || __USE_MINGW_ANSI_STDIO
 250:C:/msys64/mingw64/include\stdio.h **** #define __MINGW_PRINTF_FORMAT gnu_printf
 251:C:/msys64/mingw64/include\stdio.h **** #define __MINGW_SCANF_FORMAT  gnu_scanf
 252:C:/msys64/mingw64/include\stdio.h **** #else
 253:C:/msys64/mingw64/include\stdio.h **** #define __MINGW_PRINTF_FORMAT ms_printf
 254:C:/msys64/mingw64/include\stdio.h **** #define __MINGW_SCANF_FORMAT  ms_scanf
 255:C:/msys64/mingw64/include\stdio.h **** #endif
 256:C:/msys64/mingw64/include\stdio.h **** 
 257:C:/msys64/mingw64/include\stdio.h **** #if __USE_MINGW_ANSI_STDIO && !defined(_CRTBLD)
 258:C:/msys64/mingw64/include\stdio.h **** /*
 259:C:/msys64/mingw64/include\stdio.h ****  * User has expressed a preference for C99 conformance...
 260:C:/msys64/mingw64/include\stdio.h ****  */
 261:C:/msys64/mingw64/include\stdio.h **** 
 262:C:/msys64/mingw64/include\stdio.h **** #ifdef _GNU_SOURCE
 263:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 264:C:/msys64/mingw64/include\stdio.h **** __attribute__ ((__format__ (gnu_printf, 2, 3))) __attribute__((nonnull (1,2)))
 265:C:/msys64/mingw64/include\stdio.h **** int asprintf(char **__ret, const char *__format, ...)
 266:C:/msys64/mingw64/include\stdio.h **** {
 267:C:/msys64/mingw64/include\stdio.h ****   int __retval;
 268:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
 269:C:/msys64/mingw64/include\stdio.h ****   __retval = __mingw_vasprintf( __ret, __format, __local_argv );
 270:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_end( __local_argv );
 271:C:/msys64/mingw64/include\stdio.h ****   return __retval;
 272:C:/msys64/mingw64/include\stdio.h **** }
 273:C:/msys64/mingw64/include\stdio.h **** 
 274:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 275:C:/msys64/mingw64/include\stdio.h **** __attribute__ ((__format__ (gnu_printf, 2, 0))) __attribute__((nonnull (1,2)))
 276:C:/msys64/mingw64/include\stdio.h **** int vasprintf(char **__ret, const char *__format, __builtin_va_list __local_argv)
 277:C:/msys64/mingw64/include\stdio.h **** {
 278:C:/msys64/mingw64/include\stdio.h ****   return __mingw_vasprintf( __ret, __format, __local_argv );
 279:C:/msys64/mingw64/include\stdio.h **** }
 280:C:/msys64/mingw64/include\stdio.h **** #endif /* _GNU_SOURCE */
 281:C:/msys64/mingw64/include\stdio.h **** 
 282:C:/msys64/mingw64/include\stdio.h **** /* There seems to be a bug about builtins and static overrides of them
 283:C:/msys64/mingw64/include\stdio.h ****    in g++.  So we need to do here some trickery.  */
 284:C:/msys64/mingw64/include\stdio.h **** #ifdef __cplusplus
 285:C:/msys64/mingw64/include\stdio.h **** extern "C++" {
 286:C:/msys64/mingw64/include\stdio.h **** #endif
 287:C:/msys64/mingw64/include\stdio.h **** 
 288:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 289:C:/msys64/mingw64/include\stdio.h **** __attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 290:C:/msys64/mingw64/include\stdio.h **** int sscanf(const char *__source, const char *__format, ...)
 291:C:/msys64/mingw64/include\stdio.h **** {
 292:C:/msys64/mingw64/include\stdio.h ****   int __retval;
 293:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
 294:C:/msys64/mingw64/include\stdio.h ****   __retval = __mingw_vsscanf( __source, __format, __local_argv );
 295:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_end( __local_argv );
 296:C:/msys64/mingw64/include\stdio.h ****   return __retval;
 297:C:/msys64/mingw64/include\stdio.h **** }
 298:C:/msys64/mingw64/include\stdio.h **** 
 299:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 300:C:/msys64/mingw64/include\stdio.h **** __attribute__((__format__ (gnu_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
 301:C:/msys64/mingw64/include\stdio.h **** int scanf(const char *__format, ...)
 302:C:/msys64/mingw64/include\stdio.h **** {
 303:C:/msys64/mingw64/include\stdio.h ****   int __retval;
 304:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
 305:C:/msys64/mingw64/include\stdio.h ****   __retval = __mingw_vfscanf( stdin, __format, __local_argv );
 306:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_end( __local_argv );
 307:C:/msys64/mingw64/include\stdio.h ****   return __retval;
 308:C:/msys64/mingw64/include\stdio.h **** }
 309:C:/msys64/mingw64/include\stdio.h **** 
 310:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 311:C:/msys64/mingw64/include\stdio.h **** __attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 312:C:/msys64/mingw64/include\stdio.h **** int fscanf(FILE *__stream, const char *__format, ...)
 313:C:/msys64/mingw64/include\stdio.h **** {
 314:C:/msys64/mingw64/include\stdio.h ****   int __retval;
 315:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
 316:C:/msys64/mingw64/include\stdio.h ****   __retval = __mingw_vfscanf( __stream, __format, __local_argv );
 317:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_end( __local_argv );
 318:C:/msys64/mingw64/include\stdio.h ****   return __retval;
 319:C:/msys64/mingw64/include\stdio.h **** }
 320:C:/msys64/mingw64/include\stdio.h **** 
 321:C:/msys64/mingw64/include\stdio.h **** #ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
 322:C:/msys64/mingw64/include\stdio.h **** #ifdef __GNUC__
 323:C:/msys64/mingw64/include\stdio.h **** #pragma GCC diagnostic push
 324:C:/msys64/mingw64/include\stdio.h **** #pragma GCC diagnostic ignored "-Wshadow"
 325:C:/msys64/mingw64/include\stdio.h **** #endif
 326:C:/msys64/mingw64/include\stdio.h **** 
 327:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 328:C:/msys64/mingw64/include\stdio.h **** __attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
 329:C:/msys64/mingw64/include\stdio.h **** int vsscanf (const char *__source, const char *__format, __builtin_va_list __local_argv)
 330:C:/msys64/mingw64/include\stdio.h **** {
 331:C:/msys64/mingw64/include\stdio.h ****   return __mingw_vsscanf( __source, __format, __local_argv );
 332:C:/msys64/mingw64/include\stdio.h **** }
 333:C:/msys64/mingw64/include\stdio.h **** 
 334:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 335:C:/msys64/mingw64/include\stdio.h **** __attribute__((__format__ (gnu_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
 336:C:/msys64/mingw64/include\stdio.h **** int vscanf(const char *__format,  __builtin_va_list __local_argv)
 337:C:/msys64/mingw64/include\stdio.h **** {
 338:C:/msys64/mingw64/include\stdio.h ****   return __mingw_vfscanf( stdin, __format, __local_argv );
 339:C:/msys64/mingw64/include\stdio.h **** }
 340:C:/msys64/mingw64/include\stdio.h **** 
 341:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 342:C:/msys64/mingw64/include\stdio.h **** __attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
 343:C:/msys64/mingw64/include\stdio.h **** int vfscanf (FILE *__stream,  const char *__format, __builtin_va_list __local_argv)
 344:C:/msys64/mingw64/include\stdio.h **** {
 345:C:/msys64/mingw64/include\stdio.h ****   return __mingw_vfscanf( __stream, __format, __local_argv );
 346:C:/msys64/mingw64/include\stdio.h **** }
 347:C:/msys64/mingw64/include\stdio.h **** 
 348:C:/msys64/mingw64/include\stdio.h **** #ifdef __GNUC__
 349:C:/msys64/mingw64/include\stdio.h **** #pragma GCC diagnostic pop
 350:C:/msys64/mingw64/include\stdio.h **** #endif
 351:C:/msys64/mingw64/include\stdio.h **** #endif /* __NO_ISOCEXT */
 352:C:/msys64/mingw64/include\stdio.h **** 
 353:C:/msys64/mingw64/include\stdio.h **** 
 354:C:/msys64/mingw64/include\stdio.h **** 
 355:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 356:C:/msys64/mingw64/include\stdio.h **** __attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
 357:C:/msys64/mingw64/include\stdio.h **** int fprintf (FILE *__stream, const char *__format, ...)
 358:C:/msys64/mingw64/include\stdio.h **** {
 359:C:/msys64/mingw64/include\stdio.h ****   int __retval;
 360:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
 361:C:/msys64/mingw64/include\stdio.h ****   __retval = __mingw_vfprintf( __stream, __format, __local_argv );
 362:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_end( __local_argv );
 363:C:/msys64/mingw64/include\stdio.h ****   return __retval;
 364:C:/msys64/mingw64/include\stdio.h **** }
 365:C:/msys64/mingw64/include\stdio.h **** 
 366:C:/msys64/mingw64/include\stdio.h **** __mingw_ovr
 367:C:/msys64/mingw64/include\stdio.h **** __attribute__((__format__ (gnu_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
 368:C:/msys64/mingw64/include\stdio.h **** int printf (const char *__format, ...)
 369:C:/msys64/mingw64/include\stdio.h **** {
  20              		.loc 1 369 1 view -0
  21              		.loc 1 369 1 is_stmt 0 view .LVU1
  22 0000 56       		pushq	%rsi	 #
  23              		.seh_pushreg	%rsi
  24              	.LCFI0:
  25 0001 53       		pushq	%rbx	 #
  26              		.seh_pushreg	%rbx
  27              	.LCFI1:
  28 0002 4883EC38 		subq	$56, %rsp	 #,
  29              		.seh_stackalloc	56
  30              	.LCFI2:
  31              		.seh_endprologue
 370:C:/msys64/mingw64/include\stdio.h ****   int __retval;
  32              		.loc 1 370 3 is_stmt 1 view .LVU2
 371:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
  33              		.loc 1 371 3 view .LVU3
  34              		.loc 1 371 35 view .LVU4
  35              	 # C:/msys64/mingw64/include/stdio.h:371:   __builtin_va_list __local_argv; __builtin_va_start( __l
  36              		.loc 1 371 53 is_stmt 0 view .LVU5
  37 0006 488D7424 		leaq	88(%rsp), %rsi	 #, tmp86
  37      58
  38              	 # C:/msys64/mingw64/include/stdio.h:369: {
 369:C:/msys64/mingw64/include\stdio.h ****   int __retval;
  39              		.loc 1 369 1 view .LVU6
  40 000b 48895424 		movq	%rdx, 88(%rsp)	 #,
  40      58
  41 0010 4889CB   		movq	%rcx, %rbx	 # tmp89, __format
  42              	 # C:/msys64/mingw64/include/stdio.h:372:   __retval = __mingw_vfprintf( stdout, __format, __local_
 372:C:/msys64/mingw64/include\stdio.h ****   __retval = __mingw_vfprintf( stdout, __format, __local_argv );
  43              		.loc 1 372 30 view .LVU7
  44 0013 B9010000 		movl	$1, %ecx	 #,
  44      00
  45              	.LVL1:
  46              	 # C:/msys64/mingw64/include/stdio.h:369: {
 369:C:/msys64/mingw64/include\stdio.h ****   int __retval;
  47              		.loc 1 369 1 view .LVU8
  48 0018 4C894424 		movq	%r8, 96(%rsp)	 #,
  48      60
  49 001d 4C894C24 		movq	%r9, 104(%rsp)	 #,
  49      68
  50              	 # C:/msys64/mingw64/include/stdio.h:371:   __builtin_va_list __local_argv; __builtin_va_start( __l
 371:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
  51              		.loc 1 371 53 view .LVU9
  52 0022 48897424 		movq	%rsi, 40(%rsp)	 # tmp86, MEM[(char * *)&__local_argv]
  52      28
  53              		.loc 1 372 3 is_stmt 1 view .LVU10
  54              	 # C:/msys64/mingw64/include/stdio.h:372:   __retval = __mingw_vfprintf( stdout, __format, __local_
  55              		.loc 1 372 30 is_stmt 0 view .LVU11
  56 0027 FF150000 		call	*__imp___acrt_iob_func(%rip)	 #
  56      0000
  57              	.LVL2:
  58 002d 4989F0   		movq	%rsi, %r8	 # tmp86,
  59 0030 4889DA   		movq	%rbx, %rdx	 # __format,
  60 0033 4889C1   		movq	%rax, %rcx	 # tmp90, _5
  61 0036 E8000000 		call	__mingw_vfprintf	 #
  61      00
  62              	.LVL3:
 373:C:/msys64/mingw64/include\stdio.h ****   __builtin_va_end( __local_argv );
  63              		.loc 1 373 3 is_stmt 1 view .LVU12
 374:C:/msys64/mingw64/include\stdio.h ****   return __retval;
  64              		.loc 1 374 3 view .LVU13
  65              	 # C:/msys64/mingw64/include/stdio.h:375: }
 375:C:/msys64/mingw64/include\stdio.h **** }
  66              		.loc 1 375 1 is_stmt 0 view .LVU14
  67 003b 4883C438 		addq	$56, %rsp	 #,
  68              	.LCFI3:
  69 003f 5B       		popq	%rbx	 #
  70              	.LCFI4:
  71              	.LVL4:
  72              		.loc 1 375 1 view .LVU15
  73 0040 5E       		popq	%rsi	 #
  74              	.LCFI5:
  75 0041 C3       		ret	
  76              	.LFE8:
  77              		.seh_endproc
  79 0042 90909090 		.section .rdata,"dr"
  79      90909090 
  79      90909090 
  79      9090
  80              	.LC0:
  81 0000 48656C6C 		.ascii "Hello, World!\0"
  81      6F2C2057 
  81      6F726C64 
  81      2100
  82 000e 0000     		.section	.text.startup,"x"
  83              		.p2align 4
  84              		.globl	main
  86              		.seh_proc	main
  87              	main:
  88              	.LFB46:
  89              		.file 2 "hello.cc"
   1:hello.cc      **** #include <stdio.h>
   2:hello.cc      **** 
   3:hello.cc      **** int main() {
  90              		.loc 2 3 12 is_stmt 1 view -0
  91 0000 4883EC28 		subq	$40, %rsp	 #,
  92              		.seh_stackalloc	40
  93              	.LCFI6:
  94              		.seh_endprologue
  95              	 # hello.cc:3: int main() {
  96              		.loc 2 3 12 is_stmt 0 view .LVU17
  97 0004 E8000000 		call	__main	 #
  97      00
  98              	.LVL5:
   4:hello.cc      **** 	printf("Hello, World!");
  99              		.loc 2 4 2 is_stmt 1 view .LVU18
 100              	 # hello.cc:4: 	printf("Hello, World!");
 101              		.loc 2 4 8 is_stmt 0 view .LVU19
 102 0009 488D0D00 		leaq	.LC0(%rip), %rcx	 #, tmp83
 102      000000
 103 0010 E8000000 		call	_Z6printfPKcz	 #
 103      00
 104              	.LVL6:
   5:hello.cc      **** 
   6:hello.cc      **** 	return 0;
 105              		.loc 2 6 2 is_stmt 1 view .LVU20
 106              	 # hello.cc:7: }
   7:hello.cc      **** }
 107              		.loc 2 7 1 is_stmt 0 view .LVU21
 108 0015 31C0     		xorl	%eax, %eax	 #
 109 0017 4883C428 		addq	$40, %rsp	 #,
 110              	.LCFI7:
 111 001b C3       		ret	
 112              	.LFE46:
 113              		.seh_endproc
 114 001c 90909090 		.section	.debug_frame,"dr"
 115              	.Lframe0:
 116 0000 14000000 		.long	.LECIE0-.LSCIE0
 117              	.LSCIE0:
 118 0004 FFFFFFFF 		.long	0xffffffff
 119 0008 03       		.byte	0x3
 120 0009 00       		.ascii "\0"
 121 000a 01       		.uleb128 0x1
 122 000b 78       		.sleb128 -8
 123 000c 10       		.uleb128 0x10
 124 000d 0C       		.byte	0xc
 125 000e 07       		.uleb128 0x7
 126 000f 08       		.uleb128 0x8
 127 0010 90       		.byte	0x90
 128 0011 01       		.uleb128 0x1
 129 0012 00000000 		.align 8
 129      0000
 130              	.LECIE0:
 131              	.LSFDE0:
 132 0018 44000000 		.long	.LEFDE0-.LASFDE0
 133              	.LASFDE0:
 134 001c 00000000 		.secrel32	.Lframe0
 135 0020 00000000 		.quad	.LFB8
 135      00000000 
 136 0028 42000000 		.quad	.LFE8-.LFB8
 136      00000000 
 137 0030 04       		.byte	0x4
 138 0031 01000000 		.long	.LCFI0-.LFB8
 139 0035 0E       		.byte	0xe
 140 0036 10       		.uleb128 0x10
 141 0037 84       		.byte	0x84
 142 0038 02       		.uleb128 0x2
 143 0039 04       		.byte	0x4
 144 003a 01000000 		.long	.LCFI1-.LCFI0
 145 003e 0E       		.byte	0xe
 146 003f 18       		.uleb128 0x18
 147 0040 83       		.byte	0x83
 148 0041 03       		.uleb128 0x3
 149 0042 04       		.byte	0x4
 150 0043 04000000 		.long	.LCFI2-.LCFI1
 151 0047 0E       		.byte	0xe
 152 0048 50       		.uleb128 0x50
 153 0049 04       		.byte	0x4
 154 004a 39000000 		.long	.LCFI3-.LCFI2
 155 004e 0E       		.byte	0xe
 156 004f 18       		.uleb128 0x18
 157 0050 04       		.byte	0x4
 158 0051 01000000 		.long	.LCFI4-.LCFI3
 159 0055 C3       		.byte	0xc3
 160 0056 0E       		.byte	0xe
 161 0057 10       		.uleb128 0x10
 162 0058 04       		.byte	0x4
 163 0059 01000000 		.long	.LCFI5-.LCFI4
 164 005d C4       		.byte	0xc4
 165 005e 0E       		.byte	0xe
 166 005f 08       		.uleb128 0x8
 167              		.align 8
 168              	.LEFDE0:
 169              	.LSFDE2:
 170 0060 24000000 		.long	.LEFDE2-.LASFDE2
 171              	.LASFDE2:
 172 0064 00000000 		.secrel32	.Lframe0
 173 0068 00000000 		.quad	.LFB46
 173      00000000 
 174 0070 1C000000 		.quad	.LFE46-.LFB46
 174      00000000 
 175 0078 04       		.byte	0x4
 176 0079 04000000 		.long	.LCFI6-.LFB46
 177 007d 0E       		.byte	0xe
 178 007e 30       		.uleb128 0x30
 179 007f 04       		.byte	0x4
 180 0080 17000000 		.long	.LCFI7-.LCFI6
 181 0084 0E       		.byte	0xe
 182 0085 08       		.uleb128 0x8
 183 0086 0000     		.align 8
 184              	.LEFDE2:
 185              		.text
 186              	.Letext0:
 187              		.file 3 "C:/msys64/mingw64/include/vadefs.h"
 188              		.section	.debug_info,"dr"
 189              	.Ldebug_info0:
 190 0000 39030000 		.long	0x339
 191 0004 0500     		.word	0x5
 192 0006 01       		.byte	0x1
 193 0007 08       		.byte	0x8
 194 0008 00000000 		.secrel32	.Ldebug_abbrev0
 195 000c 09       		.uleb128 0x9
 196 000d 474E5520 		.ascii "GNU C++17 12.2.0 -mtune=generic -march=x86-64 -g -O2\0"
 196      432B2B31 
 196      37203132 
 196      2E322E30 
 196      202D6D74 
 197 0042 21       		.byte	0x21
 198 0043 1D000000 		.secrel32	.LASF0
 199 0047 00000000 		.secrel32	.LASF1
 200 004b 0C000000 		.secrel32	.LLRL2
 201 004f 00000000 		.quad	0
 201      00000000 
 202 0057 00000000 		.secrel32	.Ldebug_line0
 203 005b 05       		.uleb128 0x5
 204 005c 5F5F676E 		.ascii "__gnuc_va_list\0"
 204      75635F76 
 204      615F6C69 
 204      737400
 205 006b 03       		.byte	0x3
 206 006c 18       		.byte	0x18
 207 006d 1D       		.byte	0x1d
 208 006e 72000000 		.long	0x72
 209 0072 0A       		.uleb128 0xa
 210 0073 08       		.byte	0x8
 211 0074 5F5F6275 		.ascii "__builtin_va_list\0"
 211      696C7469 
 211      6E5F7661 
 211      5F6C6973 
 211      7400
 212 0086 8A000000 		.long	0x8a
 213 008a 01       		.uleb128 0x1
 214 008b 01       		.byte	0x1
 215 008c 06       		.byte	0x6
 216 008d 63686172 		.ascii "char\0"
 216      00
 217 0092 0B       		.uleb128 0xb
 218 0093 8A000000 		.long	0x8a
 219 0097 05       		.uleb128 0x5
 220 0098 76615F6C 		.ascii "va_list\0"
 220      69737400 
 221 00a0 03       		.byte	0x3
 222 00a1 1F       		.byte	0x1f
 223 00a2 1A       		.byte	0x1a
 224 00a3 5B000000 		.long	0x5b
 225 00a7 01       		.uleb128 0x1
 226 00a8 08       		.byte	0x8
 227 00a9 07       		.byte	0x7
 228 00aa 6C6F6E67 		.ascii "long long unsigned int\0"
 228      206C6F6E 
 228      6720756E 
 228      7369676E 
 228      65642069 
 229 00c1 01       		.uleb128 0x1
 230 00c2 08       		.byte	0x8
 231 00c3 05       		.byte	0x5
 232 00c4 6C6F6E67 		.ascii "long long int\0"
 232      206C6F6E 
 232      6720696E 
 232      7400
 233 00d2 01       		.uleb128 0x1
 234 00d3 02       		.byte	0x2
 235 00d4 07       		.byte	0x7
 236 00d5 73686F72 		.ascii "short unsigned int\0"
 236      7420756E 
 236      7369676E 
 236      65642069 
 236      6E7400
 237 00e8 01       		.uleb128 0x1
 238 00e9 04       		.byte	0x4
 239 00ea 05       		.byte	0x5
 240 00eb 696E7400 		.ascii "int\0"
 241 00ef 01       		.uleb128 0x1
 242 00f0 04       		.byte	0x4
 243 00f1 05       		.byte	0x5
 244 00f2 6C6F6E67 		.ascii "long int\0"
 244      20696E74 
 244      00
 245 00fb 06       		.uleb128 0x6
 246 00fc 8A000000 		.long	0x8a
 247 0100 01       		.uleb128 0x1
 248 0101 02       		.byte	0x2
 249 0102 07       		.byte	0x7
 250 0103 77636861 		.ascii "wchar_t\0"
 250      725F7400 
 251 010b 01       		.uleb128 0x1
 252 010c 04       		.byte	0x4
 253 010d 07       		.byte	0x7
 254 010e 756E7369 		.ascii "unsigned int\0"
 254      676E6564 
 254      20696E74 
 254      00
 255 011b 01       		.uleb128 0x1
 256 011c 04       		.byte	0x4
 257 011d 07       		.byte	0x7
 258 011e 6C6F6E67 		.ascii "long unsigned int\0"
 258      20756E73 
 258      69676E65 
 258      6420696E 
 258      7400
 259 0130 01       		.uleb128 0x1
 260 0131 01       		.byte	0x1
 261 0132 08       		.byte	0x8
 262 0133 756E7369 		.ascii "unsigned char\0"
 262      676E6564 
 262      20636861 
 262      7200
 263 0141 0C       		.uleb128 0xc
 264 0142 5F696F62 		.ascii "_iobuf\0"
 264      756600
 265 0149 30       		.byte	0x30
 266 014a 01       		.byte	0x1
 267 014b 21       		.byte	0x21
 268 014c 0A       		.byte	0xa
 269 014d C9010000 		.long	0x1c9
 270 0151 02       		.uleb128 0x2
 271 0152 5F707472 		.ascii "_ptr\0"
 271      00
 272 0157 25       		.byte	0x25
 273 0158 0B       		.byte	0xb
 274 0159 FB000000 		.long	0xfb
 275 015d 00       		.byte	0
 276 015e 02       		.uleb128 0x2
 277 015f 5F636E74 		.ascii "_cnt\0"
 277      00
 278 0164 26       		.byte	0x26
 279 0165 09       		.byte	0x9
 280 0166 E8000000 		.long	0xe8
 281 016a 08       		.byte	0x8
 282 016b 02       		.uleb128 0x2
 283 016c 5F626173 		.ascii "_base\0"
 283      6500
 284 0172 27       		.byte	0x27
 285 0173 0B       		.byte	0xb
 286 0174 FB000000 		.long	0xfb
 287 0178 10       		.byte	0x10
 288 0179 02       		.uleb128 0x2
 289 017a 5F666C61 		.ascii "_flag\0"
 289      6700
 290 0180 28       		.byte	0x28
 291 0181 09       		.byte	0x9
 292 0182 E8000000 		.long	0xe8
 293 0186 18       		.byte	0x18
 294 0187 02       		.uleb128 0x2
 295 0188 5F66696C 		.ascii "_file\0"
 295      6500
 296 018e 29       		.byte	0x29
 297 018f 09       		.byte	0x9
 298 0190 E8000000 		.long	0xe8
 299 0194 1C       		.byte	0x1c
 300 0195 02       		.uleb128 0x2
 301 0196 5F636861 		.ascii "_charbuf\0"
 301      72627566 
 301      00
 302 019f 2A       		.byte	0x2a
 303 01a0 09       		.byte	0x9
 304 01a1 E8000000 		.long	0xe8
 305 01a5 20       		.byte	0x20
 306 01a6 02       		.uleb128 0x2
 307 01a7 5F627566 		.ascii "_bufsiz\0"
 307      73697A00 
 308 01af 2B       		.byte	0x2b
 309 01b0 09       		.byte	0x9
 310 01b1 E8000000 		.long	0xe8
 311 01b5 24       		.byte	0x24
 312 01b6 02       		.uleb128 0x2
 313 01b7 5F746D70 		.ascii "_tmpfname\0"
 313      666E616D 
 313      6500
 314 01c1 2C       		.byte	0x2c
 315 01c2 0B       		.byte	0xb
 316 01c3 FB000000 		.long	0xfb
 317 01c7 28       		.byte	0x28
 318 01c8 00       		.byte	0
 319 01c9 05       		.uleb128 0x5
 320 01ca 46494C45 		.ascii "FILE\0"
 320      00
 321 01cf 01       		.byte	0x1
 322 01d0 2F       		.byte	0x2f
 323 01d1 19       		.byte	0x19
 324 01d2 41010000 		.long	0x141
 325 01d6 07       		.uleb128 0x7
 326 01d7 5F5F6D69 		.ascii "__mingw_vfprintf\0"
 326      6E67775F 
 326      76667072 
 326      696E7466 
 326      00
 327 01e8 C1       		.byte	0xc1
 328 01e9 0F       		.byte	0xf
 329 01ea E8000000 		.long	0xe8
 330 01ee 02020000 		.long	0x202
 331 01f2 03       		.uleb128 0x3
 332 01f3 02020000 		.long	0x202
 333 01f7 03       		.uleb128 0x3
 334 01f8 07020000 		.long	0x207
 335 01fc 03       		.uleb128 0x3
 336 01fd 97000000 		.long	0x97
 337 0201 00       		.byte	0
 338 0202 06       		.uleb128 0x6
 339 0203 C9010000 		.long	0x1c9
 340 0207 06       		.uleb128 0x6
 341 0208 92000000 		.long	0x92
 342 020c 07       		.uleb128 0x7
 343 020d 5F5F6163 		.ascii "__acrt_iob_func\0"
 343      72745F69 
 343      6F625F66 
 343      756E6300 
 344 021d 5D       		.byte	0x5d
 345 021e 17       		.byte	0x17
 346 021f 02020000 		.long	0x202
 347 0223 2D020000 		.long	0x22d
 348 0227 03       		.uleb128 0x3
 349 0228 0B010000 		.long	0x10b
 350 022c 00       		.byte	0
 351 022d 0D       		.uleb128 0xd
 352 022e 6D61696E 		.ascii "main\0"
 352      00
 353 0233 02       		.byte	0x2
 354 0234 03       		.byte	0x3
 355 0235 05       		.byte	0x5
 356 0236 E8000000 		.long	0xe8
 357 023a 00000000 		.quad	.LFB46
 357      00000000 
 358 0242 1C000000 		.quad	.LFE46-.LFB46
 358      00000000 
 359 024a 01       		.uleb128 0x1
 360 024b 9C       		.byte	0x9c
 361 024c 79020000 		.long	0x279
 362 0250 0E       		.uleb128 0xe
 363 0251 09000000 		.quad	.LVL5
 363      00000000 
 364 0259 2D030000 		.long	0x32d
 365 025d 08       		.uleb128 0x8
 366 025e 15000000 		.quad	.LVL6
 366      00000000 
 367 0266 79020000 		.long	0x279
 368 026a 04       		.uleb128 0x4
 369 026b 01       		.uleb128 0x1
 370 026c 52       		.byte	0x52
 371 026d 09       		.uleb128 0x9
 372 026e 03       		.byte	0x3
 373 026f 00000000 		.quad	.LC0
 373      00000000 
 374 0277 00       		.byte	0
 375 0278 00       		.byte	0
 376 0279 0F       		.uleb128 0xf
 377 027a 7072696E 		.ascii "printf\0"
 377      746600
 378 0281 01       		.byte	0x1
 379 0282 7001     		.word	0x170
 380 0284 05       		.byte	0x5
 381 0285 5F5A3670 		.ascii "_Z6printfPKcz\0"
 381      72696E74 
 381      66504B63 
 381      7A00
 382 0293 E8000000 		.long	0xe8
 383 0297 00000000 		.quad	.LFB8
 383      00000000 
 384 029f 42000000 		.quad	.LFE8-.LFB8
 384      00000000 
 385 02a7 01       		.uleb128 0x1
 386 02a8 9C       		.byte	0x9c
 387 02a9 2D030000 		.long	0x32d
 388 02ad 10       		.uleb128 0x10
 389 02ae 5F5F666F 		.ascii "__format\0"
 389      726D6174 
 389      00
 390 02b7 01       		.byte	0x1
 391 02b8 7001     		.word	0x170
 392 02ba 19       		.byte	0x19
 393 02bb 07020000 		.long	0x207
 394 02bf 12000000 		.secrel32	.LLST0
 395 02c3 0C000000 		.secrel32	.LVUS0
 396 02c7 11       		.uleb128 0x11
 397 02c8 12       		.uleb128 0x12
 398 02c9 5F5F7265 		.ascii "__retval\0"
 398      7476616C 
 398      00
 399 02d2 01       		.byte	0x1
 400 02d3 7201     		.word	0x172
 401 02d5 07       		.byte	0x7
 402 02d6 E8000000 		.long	0xe8
 403 02da 30000000 		.secrel32	.LLST1
 404 02de 2E000000 		.secrel32	.LVUS1
 405 02e2 13       		.uleb128 0x13
 406 02e3 5F5F6C6F 		.ascii "__local_argv\0"
 406      63616C5F 
 406      61726776 
 406      00
 407 02f0 01       		.byte	0x1
 408 02f1 7301     		.word	0x173
 409 02f3 15       		.byte	0x15
 410 02f4 72000000 		.long	0x72
 411 02f8 02       		.uleb128 0x2
 412 02f9 91       		.byte	0x91
 413 02fa 58       		.sleb128 -40
 414 02fb 14       		.uleb128 0x14
 415 02fc 2D000000 		.quad	.LVL2
 415      00000000 
 416 0304 0C020000 		.long	0x20c
 417 0308 12030000 		.long	0x312
 418 030c 04       		.uleb128 0x4
 419 030d 01       		.uleb128 0x1
 420 030e 52       		.byte	0x52
 421 030f 01       		.uleb128 0x1
 422 0310 31       		.byte	0x31
 423 0311 00       		.byte	0
 424 0312 08       		.uleb128 0x8
 425 0313 3B000000 		.quad	.LVL3
 425      00000000 
 426 031b D6010000 		.long	0x1d6
 427 031f 04       		.uleb128 0x4
 428 0320 01       		.uleb128 0x1
 429 0321 51       		.byte	0x51
 430 0322 02       		.uleb128 0x2
 431 0323 73       		.byte	0x73
 432 0324 00       		.sleb128 0
 433 0325 04       		.uleb128 0x4
 434 0326 01       		.uleb128 0x1
 435 0327 58       		.byte	0x58
 436 0328 02       		.uleb128 0x2
 437 0329 74       		.byte	0x74
 438 032a 00       		.sleb128 0
 439 032b 00       		.byte	0
 440 032c 00       		.byte	0
 441 032d 15       		.uleb128 0x15
 442 032e 5F5F6D61 		.ascii "__main\0"
 442      696E00
 443 0335 5F5F6D61 		.ascii "__main\0"
 443      696E00
 444 033c 00       		.byte	0
 445              		.section	.debug_abbrev,"dr"
 446              	.Ldebug_abbrev0:
 447 0000 01       		.uleb128 0x1
 448 0001 24       		.uleb128 0x24
 449 0002 00       		.byte	0
 450 0003 0B       		.uleb128 0xb
 451 0004 0B       		.uleb128 0xb
 452 0005 3E       		.uleb128 0x3e
 453 0006 0B       		.uleb128 0xb
 454 0007 03       		.uleb128 0x3
 455 0008 08       		.uleb128 0x8
 456 0009 00       		.byte	0
 457 000a 00       		.byte	0
 458 000b 02       		.uleb128 0x2
 459 000c 0D       		.uleb128 0xd
 460 000d 00       		.byte	0
 461 000e 03       		.uleb128 0x3
 462 000f 08       		.uleb128 0x8
 463 0010 3A       		.uleb128 0x3a
 464 0011 21       		.uleb128 0x21
 465 0012 01       		.sleb128 1
 466 0013 3B       		.uleb128 0x3b
 467 0014 0B       		.uleb128 0xb
 468 0015 39       		.uleb128 0x39
 469 0016 0B       		.uleb128 0xb
 470 0017 49       		.uleb128 0x49
 471 0018 13       		.uleb128 0x13
 472 0019 38       		.uleb128 0x38
 473 001a 0B       		.uleb128 0xb
 474 001b 00       		.byte	0
 475 001c 00       		.byte	0
 476 001d 03       		.uleb128 0x3
 477 001e 05       		.uleb128 0x5
 478 001f 00       		.byte	0
 479 0020 49       		.uleb128 0x49
 480 0021 13       		.uleb128 0x13
 481 0022 00       		.byte	0
 482 0023 00       		.byte	0
 483 0024 04       		.uleb128 0x4
 484 0025 49       		.uleb128 0x49
 485 0026 00       		.byte	0
 486 0027 02       		.uleb128 0x2
 487 0028 18       		.uleb128 0x18
 488 0029 7E       		.uleb128 0x7e
 489 002a 18       		.uleb128 0x18
 490 002b 00       		.byte	0
 491 002c 00       		.byte	0
 492 002d 05       		.uleb128 0x5
 493 002e 16       		.uleb128 0x16
 494 002f 00       		.byte	0
 495 0030 03       		.uleb128 0x3
 496 0031 08       		.uleb128 0x8
 497 0032 3A       		.uleb128 0x3a
 498 0033 0B       		.uleb128 0xb
 499 0034 3B       		.uleb128 0x3b
 500 0035 0B       		.uleb128 0xb
 501 0036 39       		.uleb128 0x39
 502 0037 0B       		.uleb128 0xb
 503 0038 49       		.uleb128 0x49
 504 0039 13       		.uleb128 0x13
 505 003a 00       		.byte	0
 506 003b 00       		.byte	0
 507 003c 06       		.uleb128 0x6
 508 003d 0F       		.uleb128 0xf
 509 003e 00       		.byte	0
 510 003f 0B       		.uleb128 0xb
 511 0040 21       		.uleb128 0x21
 512 0041 08       		.sleb128 8
 513 0042 49       		.uleb128 0x49
 514 0043 13       		.uleb128 0x13
 515 0044 00       		.byte	0
 516 0045 00       		.byte	0
 517 0046 07       		.uleb128 0x7
 518 0047 2E       		.uleb128 0x2e
 519 0048 01       		.byte	0x1
 520 0049 3F       		.uleb128 0x3f
 521 004a 19       		.uleb128 0x19
 522 004b 03       		.uleb128 0x3
 523 004c 08       		.uleb128 0x8
 524 004d 3A       		.uleb128 0x3a
 525 004e 21       		.uleb128 0x21
 526 004f 01       		.sleb128 1
 527 0050 3B       		.uleb128 0x3b
 528 0051 0B       		.uleb128 0xb
 529 0052 39       		.uleb128 0x39
 530 0053 0B       		.uleb128 0xb
 531 0054 49       		.uleb128 0x49
 532 0055 13       		.uleb128 0x13
 533 0056 3C       		.uleb128 0x3c
 534 0057 19       		.uleb128 0x19
 535 0058 01       		.uleb128 0x1
 536 0059 13       		.uleb128 0x13
 537 005a 00       		.byte	0
 538 005b 00       		.byte	0
 539 005c 08       		.uleb128 0x8
 540 005d 48       		.uleb128 0x48
 541 005e 01       		.byte	0x1
 542 005f 7D       		.uleb128 0x7d
 543 0060 01       		.uleb128 0x1
 544 0061 7F       		.uleb128 0x7f
 545 0062 13       		.uleb128 0x13
 546 0063 00       		.byte	0
 547 0064 00       		.byte	0
 548 0065 09       		.uleb128 0x9
 549 0066 11       		.uleb128 0x11
 550 0067 01       		.byte	0x1
 551 0068 25       		.uleb128 0x25
 552 0069 08       		.uleb128 0x8
 553 006a 13       		.uleb128 0x13
 554 006b 0B       		.uleb128 0xb
 555 006c 03       		.uleb128 0x3
 556 006d 1F       		.uleb128 0x1f
 557 006e 1B       		.uleb128 0x1b
 558 006f 1F       		.uleb128 0x1f
 559 0070 55       		.uleb128 0x55
 560 0071 17       		.uleb128 0x17
 561 0072 11       		.uleb128 0x11
 562 0073 01       		.uleb128 0x1
 563 0074 10       		.uleb128 0x10
 564 0075 17       		.uleb128 0x17
 565 0076 00       		.byte	0
 566 0077 00       		.byte	0
 567 0078 0A       		.uleb128 0xa
 568 0079 0F       		.uleb128 0xf
 569 007a 00       		.byte	0
 570 007b 0B       		.uleb128 0xb
 571 007c 0B       		.uleb128 0xb
 572 007d 03       		.uleb128 0x3
 573 007e 08       		.uleb128 0x8
 574 007f 49       		.uleb128 0x49
 575 0080 13       		.uleb128 0x13
 576 0081 00       		.byte	0
 577 0082 00       		.byte	0
 578 0083 0B       		.uleb128 0xb
 579 0084 26       		.uleb128 0x26
 580 0085 00       		.byte	0
 581 0086 49       		.uleb128 0x49
 582 0087 13       		.uleb128 0x13
 583 0088 00       		.byte	0
 584 0089 00       		.byte	0
 585 008a 0C       		.uleb128 0xc
 586 008b 13       		.uleb128 0x13
 587 008c 01       		.byte	0x1
 588 008d 03       		.uleb128 0x3
 589 008e 08       		.uleb128 0x8
 590 008f 0B       		.uleb128 0xb
 591 0090 0B       		.uleb128 0xb
 592 0091 3A       		.uleb128 0x3a
 593 0092 0B       		.uleb128 0xb
 594 0093 3B       		.uleb128 0x3b
 595 0094 0B       		.uleb128 0xb
 596 0095 39       		.uleb128 0x39
 597 0096 0B       		.uleb128 0xb
 598 0097 01       		.uleb128 0x1
 599 0098 13       		.uleb128 0x13
 600 0099 00       		.byte	0
 601 009a 00       		.byte	0
 602 009b 0D       		.uleb128 0xd
 603 009c 2E       		.uleb128 0x2e
 604 009d 01       		.byte	0x1
 605 009e 3F       		.uleb128 0x3f
 606 009f 19       		.uleb128 0x19
 607 00a0 03       		.uleb128 0x3
 608 00a1 08       		.uleb128 0x8
 609 00a2 3A       		.uleb128 0x3a
 610 00a3 0B       		.uleb128 0xb
 611 00a4 3B       		.uleb128 0x3b
 612 00a5 0B       		.uleb128 0xb
 613 00a6 39       		.uleb128 0x39
 614 00a7 0B       		.uleb128 0xb
 615 00a8 49       		.uleb128 0x49
 616 00a9 13       		.uleb128 0x13
 617 00aa 11       		.uleb128 0x11
 618 00ab 01       		.uleb128 0x1
 619 00ac 12       		.uleb128 0x12
 620 00ad 07       		.uleb128 0x7
 621 00ae 40       		.uleb128 0x40
 622 00af 18       		.uleb128 0x18
 623 00b0 7A       		.uleb128 0x7a
 624 00b1 19       		.uleb128 0x19
 625 00b2 01       		.uleb128 0x1
 626 00b3 13       		.uleb128 0x13
 627 00b4 00       		.byte	0
 628 00b5 00       		.byte	0
 629 00b6 0E       		.uleb128 0xe
 630 00b7 48       		.uleb128 0x48
 631 00b8 00       		.byte	0
 632 00b9 7D       		.uleb128 0x7d
 633 00ba 01       		.uleb128 0x1
 634 00bb 7F       		.uleb128 0x7f
 635 00bc 13       		.uleb128 0x13
 636 00bd 00       		.byte	0
 637 00be 00       		.byte	0
 638 00bf 0F       		.uleb128 0xf
 639 00c0 2E       		.uleb128 0x2e
 640 00c1 01       		.byte	0x1
 641 00c2 3F       		.uleb128 0x3f
 642 00c3 19       		.uleb128 0x19
 643 00c4 03       		.uleb128 0x3
 644 00c5 08       		.uleb128 0x8
 645 00c6 3A       		.uleb128 0x3a
 646 00c7 0B       		.uleb128 0xb
 647 00c8 3B       		.uleb128 0x3b
 648 00c9 05       		.uleb128 0x5
 649 00ca 39       		.uleb128 0x39
 650 00cb 0B       		.uleb128 0xb
 651 00cc 6E       		.uleb128 0x6e
 652 00cd 08       		.uleb128 0x8
 653 00ce 49       		.uleb128 0x49
 654 00cf 13       		.uleb128 0x13
 655 00d0 11       		.uleb128 0x11
 656 00d1 01       		.uleb128 0x1
 657 00d2 12       		.uleb128 0x12
 658 00d3 07       		.uleb128 0x7
 659 00d4 40       		.uleb128 0x40
 660 00d5 18       		.uleb128 0x18
 661 00d6 7A       		.uleb128 0x7a
 662 00d7 19       		.uleb128 0x19
 663 00d8 01       		.uleb128 0x1
 664 00d9 13       		.uleb128 0x13
 665 00da 00       		.byte	0
 666 00db 00       		.byte	0
 667 00dc 10       		.uleb128 0x10
 668 00dd 05       		.uleb128 0x5
 669 00de 00       		.byte	0
 670 00df 03       		.uleb128 0x3
 671 00e0 08       		.uleb128 0x8
 672 00e1 3A       		.uleb128 0x3a
 673 00e2 0B       		.uleb128 0xb
 674 00e3 3B       		.uleb128 0x3b
 675 00e4 05       		.uleb128 0x5
 676 00e5 39       		.uleb128 0x39
 677 00e6 0B       		.uleb128 0xb
 678 00e7 49       		.uleb128 0x49
 679 00e8 13       		.uleb128 0x13
 680 00e9 02       		.uleb128 0x2
 681 00ea 17       		.uleb128 0x17
 682 00eb B742     		.uleb128 0x2137
 683 00ed 17       		.uleb128 0x17
 684 00ee 00       		.byte	0
 685 00ef 00       		.byte	0
 686 00f0 11       		.uleb128 0x11
 687 00f1 18       		.uleb128 0x18
 688 00f2 00       		.byte	0
 689 00f3 00       		.byte	0
 690 00f4 00       		.byte	0
 691 00f5 12       		.uleb128 0x12
 692 00f6 34       		.uleb128 0x34
 693 00f7 00       		.byte	0
 694 00f8 03       		.uleb128 0x3
 695 00f9 08       		.uleb128 0x8
 696 00fa 3A       		.uleb128 0x3a
 697 00fb 0B       		.uleb128 0xb
 698 00fc 3B       		.uleb128 0x3b
 699 00fd 05       		.uleb128 0x5
 700 00fe 39       		.uleb128 0x39
 701 00ff 0B       		.uleb128 0xb
 702 0100 49       		.uleb128 0x49
 703 0101 13       		.uleb128 0x13
 704 0102 02       		.uleb128 0x2
 705 0103 17       		.uleb128 0x17
 706 0104 B742     		.uleb128 0x2137
 707 0106 17       		.uleb128 0x17
 708 0107 00       		.byte	0
 709 0108 00       		.byte	0
 710 0109 13       		.uleb128 0x13
 711 010a 34       		.uleb128 0x34
 712 010b 00       		.byte	0
 713 010c 03       		.uleb128 0x3
 714 010d 08       		.uleb128 0x8
 715 010e 3A       		.uleb128 0x3a
 716 010f 0B       		.uleb128 0xb
 717 0110 3B       		.uleb128 0x3b
 718 0111 05       		.uleb128 0x5
 719 0112 39       		.uleb128 0x39
 720 0113 0B       		.uleb128 0xb
 721 0114 49       		.uleb128 0x49
 722 0115 13       		.uleb128 0x13
 723 0116 02       		.uleb128 0x2
 724 0117 18       		.uleb128 0x18
 725 0118 00       		.byte	0
 726 0119 00       		.byte	0
 727 011a 14       		.uleb128 0x14
 728 011b 48       		.uleb128 0x48
 729 011c 01       		.byte	0x1
 730 011d 7D       		.uleb128 0x7d
 731 011e 01       		.uleb128 0x1
 732 011f 7F       		.uleb128 0x7f
 733 0120 13       		.uleb128 0x13
 734 0121 01       		.uleb128 0x1
 735 0122 13       		.uleb128 0x13
 736 0123 00       		.byte	0
 737 0124 00       		.byte	0
 738 0125 15       		.uleb128 0x15
 739 0126 2E       		.uleb128 0x2e
 740 0127 00       		.byte	0
 741 0128 3F       		.uleb128 0x3f
 742 0129 19       		.uleb128 0x19
 743 012a 3C       		.uleb128 0x3c
 744 012b 19       		.uleb128 0x19
 745 012c 6E       		.uleb128 0x6e
 746 012d 08       		.uleb128 0x8
 747 012e 03       		.uleb128 0x3
 748 012f 08       		.uleb128 0x8
 749 0130 00       		.byte	0
 750 0131 00       		.byte	0
 751 0132 00       		.byte	0
 752              		.section	.debug_loclists,"dr"
 753 0000 39000000 		.long	.Ldebug_loc3-.Ldebug_loc2
 754              	.Ldebug_loc2:
 755 0004 0500     		.word	0x5
 756 0006 08       		.byte	0x8
 757 0007 00       		.byte	0
 758 0008 00000000 		.long	0
 759              	.Ldebug_loc0:
 760              	.LVUS0:
 761 000c 00       		.uleb128 0
 762 000d 00       		.uleb128 .LVU8
 763 000e 00       		.uleb128 .LVU8
 764 000f 00       		.uleb128 .LVU15
 765 0010 00       		.uleb128 .LVU15
 766 0011 00       		.uleb128 0
 767              	.LLST0:
 768 0012 06       		.byte	0x6
 769 0013 00000000 		.quad	.LVL0
 769      00000000 
 770 001b 04       		.byte	0x4
 771 001c 00       		.uleb128 .LVL0-.LVL0
 772 001d 18       		.uleb128 .LVL1-.LVL0
 773 001e 01       		.uleb128 0x1
 774 001f 52       		.byte	0x52
 775 0020 04       		.byte	0x4
 776 0021 18       		.uleb128 .LVL1-.LVL0
 777 0022 40       		.uleb128 .LVL4-.LVL0
 778 0023 01       		.uleb128 0x1
 779 0024 53       		.byte	0x53
 780 0025 04       		.byte	0x4
 781 0026 40       		.uleb128 .LVL4-.LVL0
 782 0027 42       		.uleb128 .LFE8-.LVL0
 783 0028 04       		.uleb128 0x4
 784 0029 A3       		.byte	0xa3
 785 002a 01       		.uleb128 0x1
 786 002b 52       		.byte	0x52
 787 002c 9F       		.byte	0x9f
 788 002d 00       		.byte	0
 789              	.LVUS1:
 790 002e 00       		.uleb128 .LVU12
 791 002f 00       		.uleb128 0
 792              	.LLST1:
 793 0030 08       		.byte	0x8
 794 0031 3B000000 		.quad	.LVL3
 794      00000000 
 795 0039 07       		.uleb128 .LFE8-.LVL3
 796 003a 01       		.uleb128 0x1
 797 003b 50       		.byte	0x50
 798 003c 00       		.byte	0
 799              	.Ldebug_loc3:
 800              		.section	.debug_aranges,"dr"
 801 0000 3C000000 		.long	0x3c
 802 0004 0200     		.word	0x2
 803 0006 00000000 		.secrel32	.Ldebug_info0
 804 000a 08       		.byte	0x8
 805 000b 00       		.byte	0
 806 000c 0000     		.word	0
 807 000e 0000     		.word	0
 808 0010 00000000 		.quad	.LFB8
 808      00000000 
 809 0018 42000000 		.quad	.LFE8-.LFB8
 809      00000000 
 810 0020 00000000 		.quad	.LFB46
 810      00000000 
 811 0028 1C000000 		.quad	.LFE46-.LFB46
 811      00000000 
 812 0030 00000000 		.quad	0
 812      00000000 
 813 0038 00000000 		.quad	0
 813      00000000 
 814              		.section	.debug_rnglists,"dr"
 815              	.Ldebug_ranges0:
 816 0000 1D000000 		.long	.Ldebug_ranges3-.Ldebug_ranges2
 817              	.Ldebug_ranges2:
 818 0004 0500     		.word	0x5
 819 0006 08       		.byte	0x8
 820 0007 00       		.byte	0
 821 0008 00000000 		.long	0
 822              	.LLRL2:
 823 000c 07       		.byte	0x7
 824 000d 00000000 		.quad	.LFB8
 824      00000000 
 825 0015 42       		.uleb128 .LFE8-.LFB8
 826 0016 07       		.byte	0x7
 827 0017 00000000 		.quad	.LFB46
 827      00000000 
 828 001f 1C       		.uleb128 .LFE46-.LFB46
 829 0020 00       		.byte	0
 830              	.Ldebug_ranges3:
 831              		.section	.debug_line,"dr"
 832              	.Ldebug_line0:
 833 0000 AA000000 		.section	.debug_str,"dr"
 833      05000800 
 833      38000000 
 833      010101FB 
 833      0E0D0001 
 834              		.section	.debug_line_str,"dr"
 835              	.LASF1:
 836 0000 453A5C77 		.ascii "E:\\workspace_asm\\hello-world\0"
 836      6F726B73 
 836      70616365 
 836      5F61736D 
 836      5C68656C 
 837              	.LASF0:
 838 001d 68656C6C 		.ascii "hello.cc\0"
 838      6F2E6363 
 838      00
 839              		.ident	"GCC: (Rev1, Built by MSYS2 project) 12.2.0"
